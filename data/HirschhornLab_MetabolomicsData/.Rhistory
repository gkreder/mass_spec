install.packages("servr")
install.packages("xcms")
version
source
source("http://bioconductor.org/biocLite.R")
biocLite(c("xcms", "multtest", "mzR"))
xcms
source ("http://puma.ibls.gla.ac.uk/mzmatch.R/install_mzmatch.R")
install.packages(xcms)
install.packages("xcms")
biocLite
biocLite("xcms")
library("faahKO")
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite(c("xcms", "multtest", "mzR"))
install.packages(c("rJava", "XML", "snow", "caTools", "bitops", "ptw", "gplots", "tcltk2"))
install.packages(c("rJava", "XML", "snow", "caTools", "bitops", "ptw", "gplots", "tcltk2"))
source ("http://puma.ibls.gla.ac.uk/mzmatch.R/install_mzmatch.R")
install.packages(c("R.utils"))
source ("http://puma.ibls.gla.ac.uk/mzmatch.R/install_mzmatch.R")
Rcpp
biocLite('rJava')
source ("http://puma.ibls.gla.ac.uk/mzmatch.R/install_mzmatch.R")
install.packages(c("Rcpp"))
source ("http://puma.ibls.gla.ac.uk/mzmatch.R/install_mzmatch.R")
library("BiocInstaller")
biocLite("mzR")
library(mzR)
library(mzR)
mzmatch
library(mzmathc.R)
library(mzmatch.R)
install.packages(mzmatch.R)
install.packages("mzmatch.R')
biocLite("mzmatch.R")
source ("http://puma.ibls.gla.ac.uk/mzmatch.R/install_mzmatch.R")
library("BiocInstaller")
biocLite("BiocUpgrade")
biocLite()
biocLite(c("faahKO", "xcms", "multtest"))
install.packages(c("rJava","XML","snow","caTools","bitops","ptw"))
source ("http://puma.ibls.gla.ac.uk/mzmatch.R/install_mzmatch.R")
install.packages("rJava")
source ("http://puma.ibls.gla.ac.uk/mzmatch.R/install_mzmatch.R")
library(rJava)
options("java.home")
options("java.home"="/Library/Java/JavaVirtualMachines/jdk1.6.0.jdk/Contents/Home/jre")
library(rJava)
library(rJava)
dyn.load()
dyn.load('/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/jre/lib/ser')
dyn.load('/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/jre/lib/')
library(rJava)
install.packages("rJava")
library(rJava)
install.packages("rJava")
library(rJava)
install.packages("rJava")
install.packages(rJava)
library(rJava)
library(rJava)
dyn.load('/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home/jre/lib/server/libjvm.dylib')
library(rJava)
sudo ln -f -s $(/usr/libexec/java_home)/jre/lib/server/libjvm.dylib /usr/local/lib
install.packages("ProbMetab")
source("http://bionconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite(c("CAMERA", "graph", "RCytoscape", "multtest"))
install.packages(c("RcppArmadillo", "hwriter", "GeneNet", "RCurl","XML", "rjson"))
install.packages(c( "bootstrap", "leaps", "mgcv"))
install.packages("~/Downloads/ProbMetab/", repos = NULL, type = "source")
library(ProbMetab)
library(xcms)
library(CAMERA)
nslaves <- 4
nslaves
getwd()
setwd('./mass_spec/data/probmetab_external_files/')
getwd()
library(ProbMetab)
library(xcms)
library(CAMERA)
nslaves <- 4
nslaves
load("probmetab-case1-box00.RData")
xset
xset2
xsetN
xsetNnofill
xsetP
xsetPnofill
xsetP <- retcor(xset, method='obiwarp', plottype="none", profStep=1)
xset
retcor
help("retcor")
xset<-xcmsSet("POS/", method='centWave', ppm=2,peakwidth=c(10,50),snthresh=3,prefilter=c(3,100), integrate=1, mzdiff=-0.00005, verbose.columns=TRUE,fitguass=FALSE,nSlaves=nslaves)
xset<-xcmsSet("POS/", method='centWave', ppm=2,peakwidth=c(10,50),snthresh=3,prefilter=c(3,100), integrate=1, mzdiff=-0.00005, verbose.columns=TRUE,fitguass=FALSE,nSlaves=nslaves)
xset
methods(xset)
load("probmetab-case1-box01.RData")
xsetN
anN
camAnot <- combinexsAnnos(anP, anN)
load("probmetab-case1-box02.RData")
reactionM
DB
head(DB)
reactionM
head(w)
anN
head(anN)
xset
install.packages(c("bootstrap, "leaps", "mgcv""))
install.packages(c("bootstrap", "leaps", "mgcv"))
db<-read.csv("IDEOM_v18_DB.csv")
db
load("probmetab-case1-box00.RData")
xsetN
an
anP
xsAnnotate()
help("xsAnnotate")
help(xcsmSet)
help(xcmsSet)
an<-xsAnnotate(xset{})
an<-xsAnnotate(xsetP)
an
camAnot<-combinexsAnnos(anP, anN)
camAnot
camAnot_temp <- camAno
camAnot_temp <- camAnot
camAnot<-combineMolIon(peaklist=camAnot, cameraobj=anP, polarity='pos')
camAnot
ionAnnotP<-get.annot(anP)
ionAnnotN<-get.annot(anN,polarity='negative')
ionAnnotP
sum(ionAnnotP$molIon[,3]==1)
ionAnnotP$molIon[,3]
load("mzMatch_outputNEG.peakml")
load("mzMatch_outputPOS.peakml")
jack
camAnnot
CamAnot
camAnot
head(DB)
help("get.annot")
anP
help("xsAnnotate")
help("xcmsSet")
exp_masses
reac_matrix
reac_matrix<-matrix(0,ncol=4)
exp_masses<-matrix(0,ncol=4)
reac_matrix
help("colnames")
colnames(exp_masses)<-c("id", "name", "formula", "mass")
exp_masses
exp_masses[1]
exp_masses[, 1]
exp_masses[, 2]
exp_masses[, 3]
exp_masses[0]
exp_masses[1,]
exp_masses[0,]
exp_masses[1,]
exp_masses[1,] <- c("c001", "thmidine", "formula", "mass")
exp_masses
exp_masses[1,] <- c("c001", "thmidine", "formula", 242.09)
exp_masses[1,] <- c("c001", "thmidine", "C10H14N2O5", 242.09)
exp_masses
exp_masses[1,] <- c("c002", "thmidine (-H20)", "C10H12N2O4", 224.08)
exp_masses
exp_masses[1,] <- c("c001", "thmidine", "C10H14N2O5", 242.09)
exp_masses[2,] <- c("c002", "thmidine (-H20)", "C10H12N2O4", 224.08)
c002
exp_masses<-matrix(6,ncol=4)
exp_masses
exp_masses<-matrix(0,ncol=4,nrow=6)
exp_masses
exp_masses[1,]
colnames(exp_masses)<-c("id", "name", "formula", "mass")
exp_masses
exp_masses[1,]
exp_masses[1,]<-c("c001", "thymidine", "C10H14N2O5", 242.09)
exp_masses[2,]<-c("c002", "thymidine (-H20)", "C10H12N2O4", 224.08)
exp_masses[3,]<-c("c003", "uracil", "C10H12N2O4", 112.03)
exp_masses[3,]<-c("c003", "uracil", "C4H4N2O2", 112.03)
exp_masses[4,]<-c("c004", "uracil (-H)", "C4H3N2O2", 111.02)
exp_masses[5,]<-c("c005", "Glycerone phosphate", "C3H7O6P", 170.00)
exp_masses[6,]<-c("c006", "Glycerone (-H2PO3)", "C3H6O3", 90.03)
exp_masses
reac_matrix<-matrix(0,ncol=4,nrow=5)
reac_matrix
reac_matrix[1,]
colnames(reac_matrix)<-c("reaction", "reaction.name", "mass.diff", "reaction.id")
reac_matrix
reac_matrix[1,]
reac_matrix[1,]<-c("H2O", "Loss of Water", 18.01, "r001")
reac_matrix[2,]<-c("-H", "Loss of Hydrogen", 1.01, "r002")
reac_matrix[1,]<-c("-H2O", "Loss of Water", 18.01, "r001")
reac_matrix[3,]<-c("+c2H2o", "acetylation", 42.01, "r003")
reac_matrix
reac_matrix[4,]<-c("+CO2","Carboxylation",43.99,"r004")
reac_matrix[5,]<-c("-H2Po3", "phosphorylation",80.97,"r005")
reac_matrix
reac_matrix[5,]<-c("-H2PO3", "phosphorylation",80.97,"r005")
reac_matrix[3,]<-c("+C2H2O", "acetylation", 42.01, "r003")
reac_matrix
reac_matrix_backup<-reac_matrix
reac_matrix
reaC_matrix_backup
reac_matrix_backup
reac_matrix<-cbind(reac_matrix, rep("", nrow(reac_matrix)))
reac_matrix
help(outer)
m_diff<-outer(as.numberic(reac_matrix[,3]),as.numeric(reac_matrix[,3]),as.numberic())
m_diff<-outer(as.numeric(reac_matrix[,3]),as.numeric(reac_matrix[,3]), "-")
m_diff
for(i in 1:nrow(m_dif)){
for(j in 1:ncol(m_diff)){
log<-abs(mdiff[i,j])> gen_reaction[,3]-0.01 & abs(m_diff[i,j]) < gen_reactions[,3]+0.01
if(sum(log)){
reac_matrix[i,5]<-paste(gen_reactions[log,4],collapse=";")
}
}
}
for(i in 1:nrow(m_diff)){
for(j in 1:ncol(m_diff)){
log<-abs(mdiff[i,j])> gen_reaction[,3]-0.01 & abs(m_diff[i,j]) < gen_reactions[,3]+0.01
if(sum(log)){
reac_matrix[i,5]<-paste(gen_reactions[log,4],collapse=";")
}
}
}
for(i in 1:nrow(m_diff)){
for(j in 1:ncol(m_diff)){
log<-abs(mdiff[i,j])> gen_reaction[,3]-0.01 & abs(m_diff[i,j]) < gen_reactions[,3]+0.01
if(sum(log)){
reac_matrix[i,5]<-paste(gen_reactions[log,4],collapse=";")
}
}
}
for(i in 1:nrow(m_diff)){
for(j in 1:ncol(m_diff)){
log<-abs(m_diff[i,j])> gen_reaction[,3]-0.01 & abs(m_diff[i,j]) < gen_reactions[,3]+0.01
if(sum(log)){
reac_matrix[i,5]<-paste(gen_reactions[log,4],collapse=";")
}
}
}
for(i in 1:nrow(m_diff)){
for(j in 1:ncol(m_diff)){
log<-abs(m_diff[i,j])> gen_reactions[,3]-0.01 & abs(m_diff[i,j]) < gen_reactions[,3]+0.01
if(sum(log)){
reac_matrix[i,5]<-paste(gen_reactions[log,4],collapse=";")
}
}
}
exp_masses
exp_masses<-matrix(0, ncol=2,nrow=3)
exp_masses
exp_masses<-c(1035,242.09100)
exp_masses
exp_masses<-matrix(0, ncol=2,nrow=3)
colnames(exp_massses)<-c("rt","massObs")
colnames(exp_masses)<-c("rt","massObs")
exp_masses
exp_masses[1,]<-c(1035,242.09100)
exp_masses[2,]<-c(500,224.07900)
exp_masses[2=3,]<-c(711,90.03215)
exp_masses[3,]<-c(711,90.03215)
exp_masses
ppm.tol<-10
ppm.tol
reac_matrix_backup
reac_matrix<-matrix(0,ncol=4)
for(i in 1:nrow(exp_masses)){
logical<-abs(((exp_masses[i,2]-db.mass)/db.mass)*10^6)<ppm.tol
if(sum(logical)){
reac_matrix0<-cbin(matrix(exp_masses[i,],nrow=1),as.matrix(valid_formulas[logical,c("mass","id")]))
}
reac_matrix<-rbind(reac_matrix,reac_matrix0)
}
db
head(DB)
library(ProbMetab)
library(xcms)
library(CAMERA)
nslaves <- 4
camAnot <- combinexsAnnos(anP, anN)
exp_masses <- matrix(c(
1035, 242.09100,
500, 224.07900,
711, 90.03215),
nrow=3
)
exp_masses <- matrix(c(
1035, 242.09100,
500, 224.07900,
711, 90.03215),
nrow=3
)
colnames(exp_masses) <- c("rt", "massObs")
exp_masses
reac_matrix <- matrix(0, ncol=4)
ppm.tol <- 10
for(i in 1:nrow(exp_masses)) {
logical <- abs(((exp_masses[i,2]-db.mass)/db.mass)*10^6) < ppm.tol
if(sum(logical)){
reac_matrix0 <- cbind(matrix(exp_masses[i,], nrow=1),
as.matrix(valid_formulas[logical,c("mass", "id")]))
}
reac_matrix <- rbind(reac_matrix, reac_matrix0)
}
db <- read.csv("IDEOM_v18_DB.csv")
rtTab <- read.csv("standardRetentionTime.csv")
rtTab
db
db.mass
testM <- rtTab[,5:10]
predSet <- data.frame(id=reactionM[reactionM[,5]!="unknown", 5],
data=as.numeric(reactionM[reactionM[,5]!="unknown", 1])/60
)
l1 <- sapply(predSet$id, function (x)
which(db[,"KEGGid."]==
sub("cpd:","",as.character(x))
)
)
l1[which(unlist(lapply(l1, length))==0)] <- 41639
db2 <- cbind(db[,"KEGGid."],db[,21:49])
db2 <- rbind(as.matrix(db2), rep(0,30))
sapply(which(unlist(lapply(l1, length))>1), function(x)
l1[[x]] <<- l1[[x]][1]
)
v1 <- unlist(l1)
cols <- c(3,4,5,6,8,9)
predM <- db2[v1, cols]
predM
predM[which(is.na(predM), arr.ind=TRUE)[,1],] <- 0
predM <- apply(predM, 2, as.numeric)
sum(apply(predM, 1, sum)==0)
testSet <- data.frame(id=rtTab[,1], data=rtTab[,2])
descData <- list(predM=predM, testM=testM)
isoPatt <- incorporate.isotopes(comb2plus, reactionM, comb=1, samp=12:23, DB=DB)
wl <- weightM(isoPatt,intervals=seq(0,1000,by=500), offset=c(3.115712, 3.434146, 2.350798))
exp_masses <- matrix(c(
1035, 242.09100,
500, 224.07900,
711, 90.03215),
nrow=3
)
colnames(exp_masses) <- c("rt", "massObs")
reac_matrix <- matrix(0, ncol=4)
ppm.tol <- 10
for(i in 1:nrow(exp_masses)) {
logical <- abs(((exp_masses[i,2]-db.mass)/db.mass)*10^6) < ppm.tol
if(sum(logical)){
reac_matrix0 <- cbind(matrix(exp_masses[i,], nrow=1),
as.matrix(valid_formulas[logical,c("mass", "id")]))
}
reac_matrix <- rbind(reac_matrix, reac_matrix0)
}
getwd()
load("probmetab-case1-box02.RData")
head(db)
db.Map
db["METLIN"]
db["DB"]
db["searchmass"]
db
head(db)
tail(db)
head(db["searchmass"])
for(i in 1:nrow(exp_masses)) {
logical <- abs(((exp_masses[i,2]-db["searchmass"])/db["searchmass"])*10^6) < ppm.tol
if(sum(logical)){
reac_matrix0 <- cbind(matrix(exp_masses[i,], nrow=1),
as.matrix(valid_formulas[logical,c("mass", "id")]))
}
reac_matrix <- rbind(reac_matrix, reac_matrix0)
}
logical
exp_masses
for(i in 1:nrow(exp_masses)) {
logical <- abs(((exp_masses[i,2]-db["searchmass"])/db["searchmass"])*10^6) < ppm.tol
if(sum(logical)){
reac_matrix0 <- cbind(matrix(exp_masses[i,], nrow=1),
as.matrix(valid_formulas[logical,c("mass", "id")]))
}
reac_matrix <- rbind(reac_matrix, reac_matrix0)
}
logical
exp_masses[1,2]
db["searchmass"]
tail(
)
tail(db["searchmass"])
i
exp_masses[i,2]
exp_masses[i,2]-db["searchmass"]
test_mass = exp_masses[i,2]
test_mass
db["searchmass"]
search_masses = db["searchmasses"]
search_masses = db["searchmass"]
search_masses
tail(search_masses)
test_mass
test_mass - search_masses
diff_masses = test_mass - search_masses
diff_masses
tail(diff_masses)
abs(diff_masses)
diff_masses / search_masses
result_vec = (diff_masses / search_masses) * 10^6
result_vec
min(search_vec)
min(result_vec)
head(db)
db<-read.csv("IDEOM_v18_DB.csv")
rtTab<-read.csv("standardRetentionTime.csv")
rtTab
head(db)
exp_masses
head(rtTab)
help("read.csv")
getwd()
setwd()
setwd("../HirschhornLab_MetabolomicsData/")
list.dirs
list
read.csv("BioAge_spQC_miss0.5.MzRtInfo.txt", header = TRUE)
read.csv("BioAge_spQC_miss0.5.MzRtInfo.txt", header = TRUE, sep="\t")
bioAge_data = read.csv("BioAge_spQC_miss0.5.MzRtInfo.txt", header = TRUE, sep = "\t")
bioAge_data
tail(bioAge_data)
bioAge_data
